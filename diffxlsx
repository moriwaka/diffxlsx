#!/usr/bin/python

import sys, difflib, optparse, os.path
from openpyxl import Workbook

def diff_a_file(fromfile, tofile, ws, row):
    """ compare one file and add rows after row number """

    fromlines = open(fromfile, 'U').readlines()
    tolines = open(tofile, 'U').readlines()

    sm = difflib.SequenceMatcher(None, fromlines, tolines)
    global n
    all_ops = sm.get_grouped_opcodes(n)

    for group in all_ops:
        (i, j, k, l) = (0, 0, 0, 0)
        for ops in group:
            (op, tmp_i, tmp_j, tmp_k, tmp_l) = ops
            if i == 0:
                i = tmp_i
            j = tmp_j
            if k == 0:
                k = tmp_k
            l = tmp_l

        cell = ws.cell(row=row, column=1)
        cell.value = fromfile
        cell = ws.cell(row=row, column=2)
        cell.value = i 
        cell = ws.cell(row=row, column=3)
        cell.value = str.join('', fromlines[i:j]).rstrip('\n')
        cell = ws.cell(row=row, column=4)
        cell.value = str.join('', tolines[k:l]).rstrip('\n')
        row += 1
    return row




def main():
    usage = "usage: %prog fromfile tofile output.xlsx"

    parser = optparse.OptionParser(usage)
    parser.add_option("-l", "--lines", type="int", default=0,
                      help='Set number of context lines (default 0)')
    (options, args) = parser.parse_args()

    if len(args) == 0:
        parser.print_help()
        sys.exit(1)
    if len(args) != 3:
        parser.error("need to specify both a fromfile, tofile, and output.xlsx")
    global n
    n = options.lines

    fromfile, tofile, outfile = args
    if os.path.isdir(fromfile) and os.path.isdir(tofile):
        multiple = True
    else:
        multiple = False

    wb = Workbook()
    ws = wb.active

    # headers
    ws['A1'] = 'filename'
    ws['B1'] = 'line number'
    ws['C1'] = 'before'
    ws['D1'] = 'after'
    ws['E1'] = 'comment'
    
    # styles
    ws.column_dimensions['A'].width = 60
    ws.column_dimensions['B'].width = 20
    ws.column_dimensions['C'].width = 60
    ws.column_dimensions['D'].width = 60
    ws.column_dimensions['E'].width = 30

    row = 2

    if multiple:                # compare directories
        import filecmp
        dcmp = filecmp.dircmp(fromfile, tofile)
        if dcmp.right_only or dcmp.left_only:
            dcmp.report()
            print "make diffs about common files only"
        flist = sorted(dcmp.common_files)

        for fname in flist:
            row = diff_a_file(fromfile + '/' + fname ,
                              tofile + '/' + fname, ws, row)
    else:                       # compare one file
        row = diff_a_file(fromfile, tofile, ws, row)
    
    wb.save(outfile)

if __name__ == '__main__':
    main()
